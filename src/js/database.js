// –ò–º–∏—Ç–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∑–∞–∫–∞–∑–æ–≤
export class Database {
  constructor() {
    this.products = [
      {
        id: 1,
        name: "Bose portable Smart speaker",
        category: "Smart home",
        price: 399.00,
        image: "img/products/Bose_portable_Smart_speaker_desk.png",
        description: "–ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è —É–º–Ω–∞—è –∫–æ–ª–æ–Ω–∫–∞ —Å –≥–æ–ª–æ—Å–æ–≤—ã–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º"
      },
      {
        id: 2,
        name: "SoundLink Flex Bluetooth speaker",
        category: "Portable bluetooth",
        price: 149.00,
        image: "img/products/Portable_bluetooth_desk.png",
        description: "–ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è Bluetooth –∫–æ–ª–æ–Ω–∫–∞ —Å –≤–æ–¥–æ–Ω–µ–ø—Ä–æ–Ω–∏—Ü–∞–µ–º–æ—Å—Ç—å—é"
      },
      {
        id: 3,
        name: "SoundLink Color Bluetooth speaker II",
        category: "Portable bluetooth",
        price: 129.00,
        image: "img/products/Portable_bluetooth_II_desk.png",
        description: "–¶–≤–µ—Ç–Ω–∞—è –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è Bluetooth –∫–æ–ª–æ–Ω–∫–∞"
      }
    ];

    this.cart = [];
    this.orders = [];
    this.paymentMethods = [
      { id: 'card', name: '–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞', icon: 'üí≥' },
      { id: 'cash', name: '–ù–∞–ª–∏—á–Ω—ã–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏', icon: 'üíµ' },
      { id: 'online', name: '–û–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞', icon: 'üåê' }
    ];
    this.deliveryMethods = [
      { id: 'ukrpost', name: '–£–∫—Ä–ø–æ—à—Ç–∞', price: 50, icon: 'üìÆ' },
      { id: 'novapost', name: '–ù–æ–≤–∞ –ø–æ—à—Ç–∞', price: 80, icon: 'üöö' }
    ];
  }

  // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
  getProducts() {
    return this.products;
  }

  // –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä –ø–æ ID
  getProductById(id) {
    return this.products.find(product => product.id === id);
  }

  // –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
  addToCart(productId, quantity = 1) {
    const product = this.getProductById(productId);
    if (!product) return false;

    const existingItem = this.cart.find(item => item.productId === productId);
    if (existingItem) {
      existingItem.quantity += quantity;
    } else {
      this.cart.push({
        productId,
        quantity,
        addedAt: new Date()
      });
    }
    return true;
  }

  // –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
  removeFromCart(productId) {
    this.cart = this.cart.filter(item => item.productId !== productId);
  }

  // –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
  updateCartItemQuantity(productId, quantity) {
    const item = this.cart.find(item => item.productId === productId);
    if (item) {
      if (quantity <= 0) {
        this.removeFromCart(productId);
      } else {
        item.quantity = quantity;
      }
    }
  }

  // –ü–æ–ª—É—á–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É
  getCart() {
    return this.cart.map(cartItem => {
      const product = this.getProductById(cartItem.productId);
      return {
        ...cartItem,
        product,
        totalPrice: product.price * cartItem.quantity
      };
    });
  }

  // –ü–æ–ª—É—á–∏—Ç—å –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ—Ä–∑–∏–Ω—ã
  getCartTotal() {
    return this.cart.reduce((total, item) => {
      const product = this.getProductById(item.productId);
      return total + (product.price * item.quantity);
    }, 0);
  }

  // –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É
  clearCart() {
    this.cart = [];
  }

  // –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑
  createOrder(orderData) {
    const order = {
      id: Date.now(),
      items: [...this.cart],
      total: this.getCartTotal(),
      delivery: orderData.delivery,
      payment: orderData.payment,
      customerInfo: orderData.customerInfo,
      status: 'pending',
      createdAt: new Date()
    };
    
    this.orders.push(order);
    this.clearCart();
    return order;
  }

  // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–∫–∞–∑—ã
  getOrders() {
    return this.orders;
  }

  // –ü–æ–ª—É—á–∏—Ç—å —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã
  getPaymentMethods() {
    return this.paymentMethods;
  }

  // –ü–æ–ª—É—á–∏—Ç—å —Å–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏
  getDeliveryMethods() {
    return this.deliveryMethods;
  }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
export const db = new Database();
